pipeline {
    agent any

    environment {
        IMAGE_NAME = "satish2323/react-app"   // Registry image name
        IMAGE_TAG = "v${env.BUILD_NUMBER}"    // Unique tag per build
        DEPLOYMENT_FILE = "deployment.yaml"
        SERVICE_FILE = "service.yaml"
        DEPLOYMENT_NAME = "my-app-deployment"
        CONTAINER_NAME = "my-app-container"
    }

    stages {

        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/Satishganiyada/React-application-k8s.git'
                    
            }
        }

        stage('Build Docker Image') {
            steps {
                echo "Building Docker image ${IMAGE_NAME}:${IMAGE_TAG}..."
                sh "sudo docker build -t ${IMAGE_NAME}:${IMAGE_TAG} ./sample-webapp"
            }
        }

        stage('Push Docker Image') {
            steps {
                echo "Pushing Docker image to Docker Hub..."
                withCredentials([usernamePassword(credentialsId: 'docker-hub-creds', 
                                                  usernameVariable: 'DOCKER_USER', 
                                                  passwordVariable: 'DOCKER_PASS')]) {
                    sh "sudo docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}"
                    sh "sudo docker push ${IMAGE_NAME}:${IMAGE_TAG}"
                }
            }
        }
        stage("updating image name"){
            steps {
                sh "sed -i 's|satish2323/react-app:v[0-9]+|${IMAGE_NAME}:${IMAGE_TAG}|' deployment.yaml"
            }
        }
        stage('Run Tests') {
            steps {
                echo "Running tests inside the Docker container..."
                sh "sudo docker run --rm ${IMAGE_NAME}:${IMAGE_TAG} npm test -- --watchAll=false"
            }
        }

        stage('Deploy to Minikube') {
            agent {
                label("minikube")
            }
            steps {
                echo "Deploying to Minikube..."
                sh "minikube status"
                git branch: 'main', url: 'https://github.com/Satishganiyada/React-application-k8s.git'
                // sh 'eval $(minikube docker-env)'
                // sh "echo 'alias kubectl="minikube kubectl --"' >> ~/.bashrc"
                // sh "source ~/.bashrc"
                sh 'minikube kubectl -- apply -f sample-webapp/deployment.yaml'
                sh 'minikube kubectl -- apply -f sample-webapp/service.yaml'


                // // Update deployment image to the new one
                // // sh "kubectl set image deployment/react-app-deployment react-container=${IMAGE_NAME}:${IMAGE_TAG} --record"
                // sh "minikube kubectl -- set image deployment/${DEPLOYMENT_NAME} ${CONTAINER_NAME}=${IMAGE_NAME}:${IMAGE_TAG} --record"
                // // Apply service YAML (if not already applied)
                // sh "minikube kubectl apply -f ${SERVICE_FILE}"

                // // Wait for rollout to complete
                // sh "minikube kubectl -- rollout status deployment/react-app-deployment"
                // sh "minikube service my-app-service --url"
            }
        }
    }

    post {
        success {
            echo "Pipeline completed successfully: Image built, pushed, tested, and deployed!"
        }
        failure {
            echo "Pipeline failed!"
        }
    }
}
